@using BSWebApp.Common
@model BSWebApp.Models.ViewModels.MapAddressViewModel
<style>
    #map-search {
        position: absolute;
        top: 80px;
        left: 10px;
        right: 10px;
    }

    #search-txt {
        float: left;
        width: 60%;
    }

    #search-btn {
        /*float: left;*/
        width: 15%;
    }

    #detect-btn {
        /*float: right;*/
        width: 15%;
    }

    #btnMapDetailsSubmit{
        /*float: right;*/
        width: 9%;
    }

    #map-canvas {
        position: absolute;
        top: 110px;
        bottom: 65px;
        left: 10px;
        right: 10px;
        height: 500px;
    }

    #map-output {
        position: absolute;
        bottom: 10px;
        left: 10px;
        right: 10px;
    }

    #map-output a {
        float: right;
    }
</style>


<div id="map-search">
   
   @*<input id="search-txt" class="form-control" type="text" value= @Model.Address>*@
    @Html.EditorFor(x => x.Address, new { htmlAttributes = new { @class = "form-control", id = "search-txt" } })
    <input id="search-btn" type="button" value="Locate Address" class="btn btn-Bsm btn-primary" >
    <input id="detect-btn" type="button" value="Detect Location" class="btn btn-sm btn-primary"  disabled >
    <input type="submit" id="btnMapDetailsSubmit" value="Save" class="btn btn-Bsm btn-primary" />
    
    @Html.EditorFor(x => x.shopMapDetails.Latitude, new { htmlAttributes = new { @class = "form-control", style = "visibility: hidden;", id="txtLatitude"} })
    @Html.EditorFor(x => x.shopMapDetails.Longitude, new { htmlAttributes = new { @class = "form-control", style = "visibility: hidden;", id = "txtLongitude" } })
    @Html.EditorFor(x => x.shopMapDetails.CreateBy, new { htmlAttributes = new { @class = "form-control", style = "visibility: hidden;"} })
    @Html.EditorFor(x => x.shopMapDetails.CreateDate, new { htmlAttributes = new { @class = "form-control", style = "visibility: hidden;"} })
</div>
<div id="map-canvas" ></div>
<div id="map-output"></div>


<script type="text/javascript">

    //$(document).ready(function () {
       
    //    if (document.getElementById("txtLatitude").value === "")
    //        {
    //        SearchByAddress();
    //        }
    //});

    function loadmap() {
        // initialize map
        var map = new google.maps.Map(document.getElementById("map-canvas"), {
            center: new google.maps.LatLng(document.getElementById("txtLatitude").value, document.getElementById("txtLongitude").value),
            zoom: 13,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });
        // initialize marker
        var marker = new google.maps.Marker({
            position: map.getCenter(),
            draggable: true,
            map: map
        });
        // intercept map and marker movements
        google.maps.event.addListener(map, "idle", function() {
            marker.setPosition(map.getCenter());
            document.getElementById("map-output").innerHTML = "Latitude:  " + map.getCenter().lat().toFixed(6) + "<br>Longitude: " + map.getCenter().lng().toFixed(6) + "<a href='https://www.google.com/maps?q=" + encodeURIComponent(map.getCenter().toUrlValue()) + "' target='_blank'>Go to maps.google.com</a>";
            document.getElementById("txtLatitude").value = map.getCenter().lat().toFixed(6);
            document.getElementById("txtLongitude").value = map.getCenter().lng().toFixed(6);

        });
        google.maps.event.addListener(marker, "dragend", function(mapEvent) {
            map.panTo(mapEvent.latLng);
        });
        // initialize geocoder
        var geocoder = new google.maps.Geocoder();
        google.maps.event.addDomListener(document.getElementById("search-btn"), "click", SearchByAddress());
        google.maps.event.addDomListener(document.getElementById("search-txt"), "keydown", function(domEvent) {
            if (domEvent.which === 13 || domEvent.keyCode === 13) {
                google.maps.event.trigger(document.getElementById("search-btn"), "click");
            }
        });

        function SearchByAddress() {
            alert('searchbyadd');
            geocoder.geocode({ address: document.getElementById("search-txt").value }, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    var result = results[0];
                    document.getElementById("search-txt").value = result.formatted_address;
                    if (result.geometry.viewport) {
                        map.fitBounds(result.geometry.viewport);
                    } else {
                        map.setCenter(result.geometry.location);
                    }
                } else if (status == google.maps.GeocoderStatus.ZERO_RESULTS) {
                    alert("Sorry, geocoder API failed to locate the address.");
                } else {
                    alert("Sorry, geocoder API failed with an error.");
                }
            });
        }
        // initialize geolocation
        if (navigator.geolocation) {
            google.maps.event.addDomListener(document.getElementById("detect-btn"), "click", function() {
                navigator.geolocation.getCurrentPosition(function(position) {
                    map.setCenter(new google.maps.LatLng(position.coords.latitude, position.coords.longitude));
                }, function() {
                    alert("Sorry, geolocation API failed to detect your location.");
                });
            });
            document.getElementById("detect-btn").disabled = false;
        }
    }
</script>

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAWiAE4UUu1vc-aYpcOdQxaLU90Z7-qqEk&callback=loadmap"
        type="text/javascript"></script>

