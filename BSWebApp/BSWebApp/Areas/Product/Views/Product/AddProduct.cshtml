@model BSWebApp.Models.ViewModels.AddProductViewModel

@{
    ViewBag.Title = "AddProduct";
   // Layout = null;
}

<h2>AddProduct</h2>


@*<script src="~/Scripts/jquery.jqGrid.min.js" type="text/javascript"></script>*@

@using (Html.BeginForm())
{
    var selectListData = ViewData["SelectListData"] as Dictionary<string, List<SelectListItem>>;
    @Html.AntiForgeryToken()
    <div class="panel panel-primary panel-transparent">
        <div class="form-horizontal" style="margin-top: 5%">
            <div class="panel-heading">
                <h3 class="panel-title">Add Product</h3>
            </div>
            <div class="form-horizontal">
                <h4>TBL_Products</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
              

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductDetails.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductDetails.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductDetails.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductDetails.ProductBrand, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductDetails.ProductBrand, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductDetails.ProductBrand, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductDetails.BarCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductDetails.BarCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductDetails.BarCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductDetails.ProductTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ProductDetails.ProductTypeID, selectListData["TBL_ProductTypes_CNFG"], new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductDetails.ProductTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductDetails.IsAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.ProductDetails.IsAvailable)
                            @Html.ValidationMessageFor(model => model.ProductDetails.IsAvailable, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductDetails.AvailableQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductDetails.AvailableQuantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductDetails.AvailableQuantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductDetails.OtherJsonDetails, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductDetails.OtherJsonDetails, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductDetails.OtherJsonDetails, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductDetails.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.ProductDetails.IsActive)
                            @Html.ValidationMessageFor(model => model.ProductDetails.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductDetails.ProductCategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ProductDetails.ProductCategoryID, selectListData["TBL_ProductCategory_CNFG"], new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductDetails.ProductCategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductDetails.ProductSubTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                       @Html.DropDownListFor(model => model.ProductDetails.ProductSubTypeID, selectListData["TBL_ProductSubType_CNFG"], new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductDetails.ProductSubTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductDetails.MRP, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductDetails.MRP, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductDetails.MRP, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProductDetails.ShopPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductDetails.ShopPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductDetails.ShopPrice, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    gand gand
                    <table id="grid"></table>
                    <div id="ServiceGridicons1">
                    </div>
                    <script type="text/javascript">

                        var data = [
                            [1, "Color", "Red"]
                        ];

                        var names = ["id", "Key", "Value"];
                        var mydata = [];

                        for (var i = 0; i < data.length; i++) {
                            mydata[i] = {};
                            for (var j = 0; j < data[i].length; j++) {
                                mydata[i][names[j]] = data[i][j];
                            }
                        }

                        $('#grid').jqGrid({
                            data: mydata,
                            datatype: "local",
                            colNames: ['id', 'Key', 'Value'],
                            colModel: [
                            {
                                name: 'id',
                                index: 'id',
                                editable: false,
                                hidden: true,
                                    width: 20,
                                    sorttype: "int"
                                },
                                {
                                    name: 'Key',
                                    index: 'Key',
                                    editable: true,

                                    width: 200,
                                    sorttype: "date"
                                },
                                {
                                    name: 'Value',
                                    editable: true,
                                    index: 'Value',
                                    width: 200
                                }
                            ],
                            pager: true,
                            // iconSet: "fontAwesome",
                            autoencode: true,
                            viewrecords: false,
                            rowNum: 10,
                            idPrefix :"1",
                            altRows: true,
                            altclass: "myAltRowClass",
                            rowList: [5, 10, 20, "10000:All"],
                            caption: "Product Other Details",
                            navOptions: {
                                add: true,
                                del: true,
                                search: false,
                                refresh: false,
                                edit: true
                            },
                            searching: {
                                closeAfterSearch: true,
                                closeAfterReset: true,
                                closeOnEscape: true,
                                searchOnEnter: true,
                                multipleSearch: true,
                                multipleGroup: true,
                                showQuery: true
                            }
                        }).jqGrid("navGrid");

                        function lwda() {
                            debugger;
                            alert(mydata);
                            alert('abe lwda le lwda');
                        }


                    </script>

                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" onclick="lwda();" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
